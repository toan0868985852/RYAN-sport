// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RYAN_sport.Models;

namespace RYAN_sport.Migrations.SportDB
{
    [DbContext(typeof(SportDBContext))]
    [Migration("20201209150201_SportDB")]
    partial class SportDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RYAN_sport.Areas.Identity.Data.AplicationtUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AplicationtUser");
                });

            modelBuilder.Entity("RYAN_sport.Models.Card", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AplicationtUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("AplicationtUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("LevelID")
                        .HasColumnType("bigint");

                    b.Property<int?>("LevelID1")
                        .HasColumnType("int");

                    b.Property<string>("NumberCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubscriptionID")
                        .HasColumnType("bigint");

                    b.Property<int?>("SubscriptionID1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AplicationtUserId");

                    b.HasIndex("LevelID1");

                    b.HasIndex("SubscriptionID1");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("RYAN_sport.Models.HeaderImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("HeaderImages");
                });

            modelBuilder.Entity("RYAN_sport.Models.Level", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AplicationtUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SportRoomID")
                        .HasColumnType("bigint");

                    b.Property<int?>("SportRoomID1")
                        .HasColumnType("int");

                    b.Property<long>("SubjectsID")
                        .HasColumnType("bigint");

                    b.Property<int?>("SubjectsID1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AplicationtUserId");

                    b.HasIndex("SportRoomID1");

                    b.HasIndex("SubjectsID1");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("RYAN_sport.Models.SportRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SportRooms");
                });

            modelBuilder.Entity("RYAN_sport.Models.Subjects", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("RYAN_sport.Models.Subscription", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("subscriptions");
                });

            modelBuilder.Entity("RYAN_sport.Models.about", b =>
                {
                    b.Property<int>("AboutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentAbout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AboutID");

                    b.ToTable("abouts");
                });

            modelBuilder.Entity("RYAN_sport.Models.exercisePackage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentPackage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("TitlePackage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("datePackage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("exercisePackages");
                });

            modelBuilder.Entity("RYAN_sport.Models.galery", b =>
                {
                    b.Property<int>("GaleryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GaleryID");

                    b.ToTable("galerys");
                });

            modelBuilder.Entity("RYAN_sport.Models.Card", b =>
                {
                    b.HasOne("RYAN_sport.Areas.Identity.Data.AplicationtUser", "AplicationtUser")
                        .WithMany()
                        .HasForeignKey("AplicationtUserId");

                    b.HasOne("RYAN_sport.Models.Level", "Level")
                        .WithMany("Cards")
                        .HasForeignKey("LevelID1");

                    b.HasOne("RYAN_sport.Models.Subscription", "Subscription")
                        .WithMany("Cards")
                        .HasForeignKey("SubscriptionID1");
                });

            modelBuilder.Entity("RYAN_sport.Models.Level", b =>
                {
                    b.HasOne("RYAN_sport.Areas.Identity.Data.AplicationtUser", null)
                        .WithMany("Levels")
                        .HasForeignKey("AplicationtUserId");

                    b.HasOne("RYAN_sport.Models.SportRoom", "SportRoom")
                        .WithMany("Levels")
                        .HasForeignKey("SportRoomID1");

                    b.HasOne("RYAN_sport.Models.Subjects", "Subjects")
                        .WithMany("Levels")
                        .HasForeignKey("SubjectsID1");
                });
#pragma warning restore 612, 618
        }
    }
}
